# ##########################
# General configuration
# ##########################

#
# SAML Issuer that issues the attribute assertions
# In Unity config, this would be set by the
# 'unity.saml.issuerURI' property
#
vo.voServerURI=https://localhost:2443

# VO or group which is accepted by this attribute source. Server will honor
#  only attributes with exactly this scope or global (i.e. without scope set).
vo.group=${voGroup}

# Those attributes specify a truststore, with certificates (not corresponding CA's 
#  certificates!) of trusted VO services. NEVER use the SSL truststore of UNICORE/X 
#  for this purpose as it effectively turns off the whole authorization! 
#  It is used for push mode and in pull mode when signature verification is enabled.
vo.truststore.type=directory
vo.truststore.directoryLocations.1=${INSTALL_PATH}/certs/unity/unity.pem


# It is REQUIRED and must be this server's URI used to identify this server 
#  to the VO service
vo.localServerURI=https://${gwHost}:${gwPort}/${uxName}

# This group of settings defines mapping of SAML attributes to UNICORE incarnation attributes.
# If you use UVOS and standard attributes there you don't have to change them. 
# See documentation for details.
vo.unicoreAttribute.xlogin=urn:unicore:attrType:xlogin
vo.unicoreAttribute.xlogin.default=urn:unicore:attrType:defaultXlogin
vo.unicoreAttribute.role=urn:unicore:attrType:role
vo.unicoreAttribute.role.default=urn:unicore:attrType:defaultRole
vo.unicoreAttribute.group=urn:unicore:attrType:primaryGid
vo.unicoreAttribute.group.default=urn:unicore:attrType:defaultPrimaryGid
vo.unicoreAttribute.supplementaryGroups=urn:unicore:attrType:supplementaryGids
vo.unicoreAttribute.supplementaryGroups.default=urn:unicore:attrType:defaultSupplementaryGids
vo.unicoreAttribute.addDefaultGroups=urn:unicore:attrType:addDefaultGroups
vo.unicoreAttribute.queue=urn:unicore:attrType:queue
vo.unicoreAttribute.queue.default=urn:unicore:attrType:defaultQueue
vo.unicoreAttribute.virtualOrganisations=urn:SAML:voprofile:group



# ##########################
# PULL mode configuration
# ##########################

# Enable pull mode? Default is false. Usually you can leave it with true value and control 
# whether the mode is enabled by using (or not) a respective attribute source in uas.config.
vo.pull.enable=true

# Full URL of SAML VO service.
# Note that this server's CA cert must be present in UNICORE/X truststore.
vo.pull.voServerURL=${voPullServerURL}

# if Unity does not accept x509 client certificate authentication
# you may want to setup a username/password for the Pull mode
# (see docs)
#vo.pull.voServerAuthN.username=
#vo.pull.voServerAuthN.password=

# keep all attributes, not only the standard UNICORE ones? Usually not needed
vo.pull.enableGenericAttributes=false

# Additional security (except transport level which is always on) can be achieved by
#  verification of signatures. The key which is used for verification must be present
#  in vo.truststore (see above) and have an alias defined below. Default is true.
vo.pull.verifySignatures=false

# Caching time of pulled attributes (in seconds). Use negative value to turn off the cache.  
vo.pull.cacheTtl=600
