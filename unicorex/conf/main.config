##
##  Main configuration file for the UNICORE/X server
##
##  Note: other config files are $include'd from here!
##
##  Note: changing these properties may require a
##        restart of the server. 
##


##########################################################################
################## General settings ######################################
##########################################################################

#
# Service container configuration file
# (contains server host/port, SSL settings, ...)
#
$include.CONTAINER conf/container.properties

#
# Execution backend configuration file
# (contains TSI host/ports, IDB file, ...)
#
$include.TSI conf/tsi.config

#
# Site name
# 
container.sitename=${uxName}

##########################################################################
################## Registry settings #####################################
##########################################################################

#
# Publish entries in an external registry?
#
container.externalregistry.use=${uxUseExternalRegistry}

#
# If publishing entries in an external registry,
# provide URL(s) of the external registry here
# 

# Registry URL:
container.externalregistry.url=${uxUrlExternalRegistry}
# additional URL(s):
#container.externalregistry.url2=....


##########################################################################
################## Gateway settings ######################################
##########################################################################

# Gateway auto-registration settings
container.security.gateway.registration=${gwAutoRegistration}
container.security.gateway.registrationSecret=${gwAutoRegistrationSecret}
# Interval in seconds for refreshing the registration 
container.security.gateway.registrationUpdateInterval=60

# Check and wait for gateway on startup?
container.security.gateway.waitOnStartup=true
# Maximum wait time in seconds
container.security.gateway.waitTime=1800


#########################################################################
################## User authentication ##################################
#########################################################################

# Enabled authenticators and their order
# The authenticators are configured in detail below
container.security.rest.authentication.order=FILE

# Username/password file
container.security.rest.authentication.FILE.class=eu.unicore.services.rest.security.FilebasedAuthenticator
container.security.rest.authentication.FILE.file=conf/user-authfile.txt

# Unity with username/password
#container.security.rest.authentication.UNITY.class=eu.unicore.services.rest.security.UnitySAMLAuthenticator
#container.security.rest.authentication.UNITY.address=https://localhost:2443/unicore-soapidp/saml2unicoreidp-soap/AuthenticationService
#container.security.rest.authentication.UNITY.validate=true

# Unity with OIDC
#container.security.rest.authentication.UNITY-OIDC.class=eu.unicore.services.rest.security.UnityOAuthAuthenticator
#container.security.rest.authentication.UNITY-OIDC.address=https://localhost:2443/unicore-soapidp-oidc/saml2unicoreidp-soap/AuthenticationService
#container.security.rest.authentication.UNITY-OIDC.validate=true

# OIDC/OAUTH server (e.g. Keycloak)
#container.security.rest.authentication.OAUTH.class=eu.unicore.services.rest.security.OAuthAuthenticator
#container.security.rest.authentication.OAUTH.address=http://localhost:7080/auth/realms/master/protocol/openid-connect/userinfo
#container.security.rest.authentication.OAUTH.validate=false

##########################################################################
################## Attribute mapping and authorisation ###################
##########################################################################

#
# Authorisation attribute source configuration
# 
# UNICORE maps the identity of the user (obtained from authentication)
# to attributes (role, xlogin, projects, ...)
#
# This property is a space separated list of attribute 
# source names, which are then configured in detail below.
# The named attribute sources are queried in the given order.
#
container.security.attributes.order=${uxAttributeSources}

#
# Combining policy
#
# If using more than one attribute source, this property controls
# how the results are combined. Valid values are
# MERGE_LAST_OVERRIDES : (default) all attributes sources are used, 
#                        with later results overwriting previous ones
# FIRST_APPLICABLE     : the first non-empty result is used
# FIRST_ACCESSIBLE     : the first obtained result is used (even if empty)
# MERGE                : attributes are merged
container.security.attributes.combiningPolicy=MERGE_LAST_OVERRIDES

#
# Configuration of the 'FILE' attribute source
#
container.security.attributes.FILE.class=eu.unicore.services.aip.file.FileAttributeSource
container.security.attributes.FILE.file=conf/user-mapfile.json
# How to match entries: strict or regexp
container.security.attributes.FILE.matching=strict

#
# Configuration of the 'XUUDB' attribute source
#
container.security.attributes.XUUDB.class=eu.unicore.services.aip.xuudb.XUUDBAttributeSource
container.security.attributes.XUUDB.xuudbHost=https://${uxXUUDBHost}
container.security.attributes.XUUDB.xuudbPort=${uxXUUDBPort}
# Component ID used when querying XUUDB
container.security.attributes.XUUDB.xuudbGCID=${uxGCID}

#
# Configuration of the 'SAML' attribute source
#
container.security.attributes.SAML.class=eu.unicore.services.aip.saml.SAMLAttributeSource
container.security.attributes.SAML.configurationFile=conf/saml.config

##############################
# XACML policies configuration
##############################

# file which contains the list of security policy files
container.security.accesscontrol.pdpConfig=conf/xacml2.config

# The XACML PDP implementation class
container.security.accesscontrol.pdp=eu.unicore.services.pdp.local.LocalHerasafPDP


#########################################################################
############################ Storages  ##################################
#########################################################################

# Home Storage (these are minimal config options, see manual for info)
coreServices.sms.storage.0.name=HOME
coreServices.sms.storage.0.type=HOME

# Example storage
#coreServices.sms.storage.1.name=WORK
#coreServices.sms.storage.1.type=VARIABLE
#coreServices.sms.storage.1.path=/work/$USER

# Example project share
#coreServices.sms.storage.2.name=PROJECT-1
#coreServices.sms.storage.2.description=Project-1 shared data
#coreServices.sms.storage.2.path=/opt/shared-data/
#coreServices.sms.storage.2.defaultUmask=007


#########################################################################
################### StorageFactory service configuration ################
#########################################################################

# enable/disable
container.feature.StorageAccess.StorageFactory.enable=${uxEnableStorageFactory}

#
# Available storage types. If not set, all factory types defined 
# below are enabled.
#
coreServices.sms.enabledFactories=DEFAULT

#
# Configuration for the "DEFAULT" storage type
# 
coreServices.sms.factory.DEFAULT.description=Default filesystem

# Base path. Denotes an absolute path on the TSI machine / cluster filesystem
coreServices.sms.factory.DEFAULT.path=${uxDefaultStorageFactoryPath}

# If this is set to true, the directory corresponding to a storage instance will
# be deleted when the instance is destroyed.
# Defaults to "true"
coreServices.sms.factory.DEFAULT.cleanup=true

#
# If metadata service should be disabled for DEFAULT storage instances
# (if metadata service is globally enabled)
coreServices.sms.factory.DEFAULT.disableMetadata=false

#
# S3 access via the Storage Factory
#
#coreServices.sms.factory.S3.description=Generic S3
#coreServices.sms.factory.S3.class=eu.unicore.uas.jclouds.s3.S3StorageImpl
#coreServices.sms.factory.S3.path=/
#coreServices.sms.factory.S3.type=CUSTOM
#coreServices.sms.factory.S3.infoProviderClass=eu.unicore.uas.jclouds.s3.S3InfoProvider
#coreServices.sms.factory.S3.description=Generic S3 storage factory
#coreServices.sms.factory.S3.settings.provider=aws-s3
#coreServices.sms.factory.S3.settings.allowUserDefinedEndpoint=true
#coreServices.sms.factory.S3.cleanup=false

#########################################################################
################### Metadata service ####################################
#########################################################################

coreServices.metadata.managerClass=eu.unicore.uas.metadata.LuceneMetadataManager

#
# use Tika for extracting metadata 
# (if you do not want this, remove this property)
#
coreServices.metadata.parserClass=org.apache.tika.parser.AutoDetectParser

#
# Lucene index directory:
#
# Configure a directory on the UNICORE/X machine where index
# files should be placed
#
coreServices.metadata.luceneDirectory=/tmp/data/luceneIndexFiles/


#########################################################################
##################### UFTP Properties ###################################
#########################################################################

# UFTPD server (pseudo-FTP) host and port
# NOTE: if the 'host' property is not set, UFTP is disabled
#coreServices.uftp.server.host=localhost
#coreServices.uftp.server.port=64434

# UFTPD command socket
#coreServices.uftp.command.host=localhost
#coreServices.uftp.command.port=64435

# Full path to the 'uftp.sh' client executable (on the TSI server)
#coreServices.uftp.client.executable=/opt/unicore/uftpd/bin/uftp.sh

# How many parallel streams to use per file transfer ('1' is usually best)
#coreServices.uftp.streams=1

##########################################################################
################## (internal) Workflow service configuration #############
##########################################################################

#
# enable/disable the internal workflow engine
# set to 'false' to disable
container.feature.WorkflowEngine.enable=${uxEnableWorkflowFeature}

#
# use separate config
#
workflow.additionalSettings=conf/workflow.properties
